{
  "version": 3,
  "sources": ["../../arabic-persian-reshaper/PersianShaper.js", "../../arabic-persian-reshaper/ArabicShaper.js", "../../arabic-persian-reshaper/index.js"],
  "sourcesContent": ["/**\n * Node Arabic & Persian String Reshaper by Shen Yiming (https://github.com/soimy/arabic-persian-reshaper)\n * Forked from (https://github.com/font-store/persian-reshaper)\n * Based on (https://raw.github.com/Accorpa/Arabic-Converter-From-and-To-Arabic-Presentation-Forms-B/)\n */\nvar charsMap = [\n\t\t/* code,isolated,initial, medial, final */\n\t\t[ 0x0621, 0xFE80, null  , null  , null   ], /* HAMZA */\n\t\t[ 0x0622, 0xFE81, null  , null  , 0xFE82 ], /* ALEF_MADDA */\n\t\t[ 0x0623, 0xFE83, null  , null  , 0xFE84 ], /* ALEF_HAMZA_ABOVE */\n\t\t[ 0x0624, 0xFE85, null  , null  , 0xFE86 ], /* WAW_HAMZA */\n\t\t[ 0x0625, 0xFE87, null  , null  , 0xFE88 ], /* ALEF_HAMZA_BELOW */\n\t\t[ 0x0626, 0xFE89, 0xFE8B, 0xFE8C, 0xFE8A ], /* YEH_HAMZA */\n\t\t[ 0x0627, 0xFE8D, null  , null  , 0xFE8E ], /* ALEF */\n\t\t[ 0x0628, 0xFE8F, 0xFE91, 0xFE92, 0xFE90 ], /* BEH */\n\t\t[ 0x0629, 0xFE93, null  , null  , 0xFE94 ], /* TEH_MARBUTA */\n\t\t[ 0x062A, 0xFE95, 0xFE97, 0xFE98, 0xFE96 ], /* TEH */\n\t\t[ 0x062B, 0xFE99, 0xFE9B, 0xFE9C, 0xFE9A ], /* THEH */\n\t\t[ 0x062C, 0xFE9D, 0xFE9F, 0xFEA0, 0xFE9E ], /* JEEM */\n\t\t[ 0x062D, 0xFEA1, 0xFEA3, 0xFEA4, 0xFEA2 ], /* HAH */\n\t\t[ 0x062E, 0xFEA5, 0xFEA7, 0xFEA8, 0xFEA6 ], /* KHAH */\n\t\t[ 0x062F, 0xFEA9, null  , null  , 0xFEAA ], /* DAL */\n\t\t[ 0x0630, 0xFEAB, null  , null  , 0xFEAC ], /* THAL */\n\t\t[ 0x0631, 0xFEAD, null  , null  , 0xFEAE ], /* REH */\n\t\t[ 0x0632, 0xFEAF, null  , null  , 0xFEB0 ], /* ZAIN */\n\t\t[ 0x0698, 0xFB8A, null  , null  , 0xFB8B ], /* ZHEH */\n\t\t[ 0x0633, 0xFEB1, 0xFEB3, 0xFEB4, 0xFEB2 ], /* SEEN */\n\t\t[ 0x0634, 0xFEB5, 0xFEB7, 0xFEB8, 0xFEB6 ], /* SHEEN */\n\t\t[ 0x0635, 0xFEB9, 0xFEBB, 0xFEBC, 0xFEBA ], /* SAD */\n\t\t[ 0x0636, 0xFEBD, 0xFEBF, 0xFEC0, 0xFEBE ], /* DAD */\n\t\t[ 0x0637, 0xFEC1, 0xFEC3, 0xFEC4, 0xFEC2 ], /* TAH */\n\t\t[ 0x0638, 0xFEC5, 0xFEC7, 0xFEC8, 0xFEC6 ], /* ZAH */\n\t\t[ 0x0639, 0xFEC9, 0xFECB, 0xFECC, 0xFECA ], /* AIN */\n\t\t[ 0x063A, 0xFECD, 0xFECF, 0xFED0, 0xFECE ], /* GHAIN */\n\t\t[ 0x0640, 0x0640, 0x0640, 0x0640, 0x0640 ], /* TATWEEL */\n\t\t[ 0x0641, 0xFED1, 0xFED3, 0xFED4, 0xFED2 ], /* FEH */\n\t\t[ 0x0642, 0xFED5, 0xFED7, 0xFED8, 0xFED6 ], /* QAF */\n\t\t[ 0x0643, 0xFED9, 0xFEDB, 0xFEDC, 0xFEDA ], /* KAF */\n\t\t[ 0x0644, 0xFEDD, 0xFEDF, 0xFEE0, 0xFEDE ], /* LAM */\n\t\t[ 0x0645, 0xFEE1, 0xFEE3, 0xFEE4, 0xFEE2 ], /* MEEM */\n\t\t[ 0x0646, 0xFEE5, 0xFEE7, 0xFEE8, 0xFEE6 ], /* NOON */\n\t\t[ 0x0647, 0xFEE9, 0xFEEB, 0xFEEC, 0xFEEA ], /* HEH */\n\t\t[ 0x0648, 0xFEED, null  , null  , 0xFEEE ], /* WAW */\n\t\t[ 0x0649, 0xFEEF, null  , null  , 0xFEF0 ], /* ALEF_MAKSURA */\n\t\t[ 0x064A, 0xFEF1, 0xFEF3, 0xFEF4, 0xFEF2 ], /* YEH Arabic */\n\t\t[ 0x06CC, 0xFBFC, 0xFBFE, 0xFBFF, 0xFBFD ], /* YEH Farsi */\n\t\t[ 0x0686, 0xFB7A, 0xFB7C, 0xFB7D, 0xFB7B ], /* CHEH */\n\t\t[ 0x067E, 0xFB56, 0xFB58, 0xFB59, 0xFB57 ],\n\t\t[ 0x06AF, 0xFB92, 0xFB94, 0xFB95, 0xFB93 ],\n\t\t[ 0x06A9, 0xFB8E, 0xFB90, 0xFB91, 0xFB8F ],\n\n\t],\n\tcombCharsMap = [\n\t\t//[ [ 0x0644, 0x0622 ], 0xFEF5, null, null, 0xFEF6 ], /* LAM_ALEF_MADDA */\n\t\t//[ [ 0x0644, 0x0623 ], 0xFEF7, null, null, 0xFEF8 ], /* LAM_ALEF_HAMZA_ABOVE */\n\t\t//[ [ 0x0644, 0x0625 ], 0xFEF9, null, null, 0xFEFA ], /* LAM_ALEF_HAMZA_BELOW */\n\t\t[ [ 0x0644, 0x0627 ], 0xFEFB, null, null, 0xFEFC ], /* LAM_ALEF */\n\t],\n\ttransChars = [\n\t\t0x0610, /* ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM */\n\t\t0x0612, /* ARABIC SIGN ALAYHE ASSALLAM */\n\t\t0x0613, /* ARABIC SIGN RADI ALLAHOU ANHU */\n\t\t0x0614, /* ARABIC SIGN TAKHALLUS */\n\t\t0x0615, /* ARABIC SMALL HIGH TAH */\n\t\t0x064B, /* ARABIC FATHATAN */\n\t\t0x064C, /* ARABIC DAMMATAN */\n\t\t0x064D, /* ARABIC KASRATAN */\n\t\t0x064E, /* ARABIC FATHA */\n\t\t0x064F, /* ARABIC DAMMA */\n\t\t0x0650, /* ARABIC KASRA */\n\t\t0x0651, /* ARABIC SHADDA */\n\t\t0x0652, /* ARABIC SUKUN */\n\t\t0x0653, /* ARABIC MADDAH ABOVE */\n\t\t0x0654, /* ARABIC HAMZA ABOVE */\n\t\t0x0655, /* ARABIC HAMZA BELOW */\n\t\t0x0656, /* ARABIC SUBSCRIPT ALEF */\n\t\t0x0657, /* ARABIC INVERTED DAMMA */\n\t\t0x0658, /* ARABIC MARK NOON GHUNNA */\n\t\t0x0670, /* ARABIC LETTER SUPERSCRIPT ALEF */\n\t\t0x06D6, /* ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA */\n\t\t0x06D7, /* ARABIC SMALL HIGH LIGATURE QAF WITH LAM WITH ALEF MAKSURA */\n\t\t0x06D8, /* ARABIC SMALL HIGH MEEM INITIAL FORM */\n\t\t0x06D9, /* ARABIC SMALL HIGH LAM ALEF */\n\t\t0x06DA, /* ARABIC SMALL HIGH JEEM */\n\t\t0x06DB, /* ARABIC SMALL HIGH THREE DOTS */\n\t\t0x06DC, /* ARABIC SMALL HIGH SEEN */\n\t\t0x06DF, /* ARABIC SMALL HIGH ROUNDED ZERO */\n\t\t0x06E0, /* ARABIC SMALL HIGH UPRIGHT RECTANGULAR ZERO */\n\t\t0x06E1, /* ARABIC SMALL HIGH DOTLESS HEAD OF KHAH */\n\t\t0x06E2, /* ARABIC SMALL HIGH MEEM ISOLATED FORM */\n\t\t0x06E3, /* ARABIC SMALL LOW SEEN */\n\t\t0x06E4, /* ARABIC SMALL HIGH MADDA */\n\t\t0x06E7, /* ARABIC SMALL HIGH YEH */\n\t\t0x06E8, /* ARABIC SMALL HIGH NOON */\n\t\t0x06EA, /* ARABIC EMPTY CENTRE LOW STOP */\n\t\t0x06EB, /* ARABIC EMPTY CENTRE HIGH STOP */\n\t\t0x06EC, /* ARABIC ROUNDED HIGH STOP WITH FILLED CENTRE */\n\t\t0x06ED, /* ARABIC SMALL LOW MEEM */\n\t];\n\nfunction CharacterMapContains(c) {\n\tfor (var i = 0 ; i < charsMap.length ; ++i)\n\t\tif (charsMap[ i ][0] == c) return true;\n\treturn false;\n}\n\nfunction GetCharRep(c) {\n\tfor (var i = 0 ; i < charsMap.length ; ++i)\n\t\tif (charsMap[ i ][0] == c) return charsMap[i];\n\treturn false;\n}\n\nfunction GetCombCharRep(c1, c2) {\n\tfor (var i = 0 ; i < combCharsMap.length ; ++i)\n\t\tif (combCharsMap[i][0][0] == c1 && combCharsMap[i][0][1] == c2) return combCharsMap[i];\n\treturn false;\n}\n\nfunction IsTransparent(c) {\n\tfor (var i = 0 ; i < transChars.length ; ++i)\n\t\tif ( transChars[i] == c ) return true;\n\treturn false;\n}\n\nfunction convertArabic(normal) {\n\tvar crep,\n\t\tcombcrep,\n\t\tshaped = \"\";\n\n\tfor ( var i = 0 ; i < normal.length ; ++i ) {\n\t\tvar current = normal.charCodeAt(i);\n\t\tif ( CharacterMapContains( current ) ) {\n\t\t\tvar prev = null,\n\t\t\t\tnext = null,\n\t\t\t\tprevID = i - 1,\n\t\t\t\tnextID = i + 1;\n\t\t\t\n\t\t\t/*\n\t\t\t\tTransparent characters have no effect in the shaping process.\n\t\t\t\tSo, ignore all the transparent characters that are BEFORE the\n\t\t\t\tcurrent character.\n\t\t\t\t*/\n\t\t\tfor ( ; prevID >= 0 ; --prevID ) {\n\t\t\t\tif ( !IsTransparent( normal.charCodeAt(prevID) ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprev = ( prevID >= 0 ) ? normal.charCodeAt(prevID) : null;\n\t\t\tcrep = prev ? GetCharRep( prev ) : false;\n\t\t\tif( crep[2] == null && crep[3] == null ) {\n\t\t\t\tprev = null;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t\tTransparent characters have no effect in the shaping process.\n\t\t\t\tSo, ignore all the transparent characters that are AFTER the\n\t\t\t\tcurrent character.\n\t\t\t\t*/\n\t\t\tfor ( ; nextID < normal.length ; ++nextID ) {\n\t\t\t\tif ( !IsTransparent( normal.charCodeAt(nextID) ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnext = ( nextID <= normal.length ) ? normal.charCodeAt(nextID) : null;\n\t\t\tcrep = next ? GetCharRep( next ) : false;\n\t\t\tif( crep[3] == null && crep[4] == null ) {\n\t\t\t\tnext = null;\n\t\t\t}\n\n\t\t\t// /* Combinations */\n\t\t\tif ( current == 0x0644 && next != null &&\n\t\t\t\t( next == 0x0622 || next == 0x0623 || next == 0x0625 || next == 0x0627) ) {\n\t\t\t\tcombcrep = GetCombCharRep(current, next);\n\t\t\t\tif ( prev != null ) {\n\t\t\t\t\tshaped += String.fromCharCode(combcrep[4]);\n\t\t\t\t} else {\n\t\t\t\t\tshaped += String.fromCharCode(combcrep[1]);\n\t\t\t\t}\n\t\t\t\t\ti = i+1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tcrep = GetCharRep( current );\n\t\t\t\n\t\t\t/* Medial */\n\t\t\tif ( prev != null && next != null && crep[3] != null ) {\n\t\t\t\tshaped += String.fromCharCode(crep[3]);\n\t\t\t\tcontinue;\n\t\t\t} else /* Final */ \n\t\t\t\tif ( prev != null && crep[4] != null ) {\n\t\t\t\tshaped += String.fromCharCode(crep[4]);\n\t\t\t\tcontinue;\n\t\t\t} else /* Initial */\n\t\t\t\tif ( next != null && crep[2] != null ) {\n\t\t\t\tshaped += String.fromCharCode(crep[2]);\n\t\t\t\tcontinue;\n\t\t\t} else /* Isolated */ {\n\t\t\t\tshaped += String.fromCharCode(crep[1]);\n\t\t\t}\n\t\t} else {\n\t\t\tshaped += String.fromCharCode(current);\n\t\t}\n\t}\n\treturn shaped; \n}\nexports.convertArabic = convertArabic;\n\n// convert from Arabic Presentation Forms B\nfunction convertArabicBack(apfb) {\n\tvar toReturn = \"\",\n\t\tselectedChar;\n\t\n\ttheLoop:\n\tfor( var i = 0 ; i < apfb.length ; ++i ) {\n\t\tselectedChar = apfb.charCodeAt(i);\n\n\t\tfor( var j = 0 ; j < charsMap.length ; ++j ) {\n\t\t\tif( charsMap[j][4] == selectedChar || charsMap[j][2] == selectedChar || \n\t\t\t\tcharsMap[j][1] == selectedChar || charsMap[j][3] == selectedChar ) {\n\t\t\t\ttoReturn += String.fromCharCode(charsMap[j][0]);\n\t\t\t\tcontinue theLoop;\n\t\t\t}\n\t\t}\n\n\t\tfor( var j = 0 ; j < combCharsMap.length ; ++j ) {\n\t\t\tif( combCharsMap[j][4] == selectedChar || combCharsMap[j][2] == selectedChar || \n\t\t\t\tcombCharsMap[j][1] == selectedChar || combCharsMap[j][3] == selectedChar ) {\n\t\t\t\ttoReturn += String.fromCharCode(combCharsMap[j][0][0]) + String.fromCharCode(combCharsMap[j][0][1]);\n\t\t\t\tcontinue theLoop;\n\t\t\t}\n\t\t}\n\n\t\ttoReturn += String.fromCharCode( selectedChar );\n\t}\n\treturn toReturn;\n}\nexports.convertArabicBack = convertArabicBack;", "/**\n *\n *\tEdited By Alex Clay to add Arabic characters not included in Persian.\n *\thttps://github.com/alex-clay/arabic-persian-reshaper\n *\n * Node Arabic & Persian String Reshaper by Shen Yiming (https://github.com/soimy/arabic-persian-reshaper)\n * Forked from (https://github.com/font-store/persian-reshaper)\n * Based on (https://raw.github.com/Accorpa/Arabic-Converter-From-and-To-Arabic-Presentation-Forms-B/)\n */\nvar charsMap = [\n\t\t/* code,isolated,initial, medial, final */\n\t\t[ 0x0621, 0xFE80, null  , null  , null   ], /* HAMZA */\n\t\t[ 0x0622, 0xFE81, null  , null  , 0xFE82 ], /* ALEF_MADDA */\n\t\t[ 0x0623, 0xFE83, null  , null  , 0xFE84 ], /* ALEF_HAMZA_ABOVE */\n\t\t[ 0x0624, 0xFE85, null  , null  , 0xFE86 ], /* WAW_HAMZA */\n\t\t[ 0x0625, 0xFE87, null  , null  , 0xFE88 ], /* ALEF_HAMZA_BELOW */\n\t\t[ 0x0626, 0xFE89, 0xFE8B, 0xFE8C, 0xFE8A ], /* YEH_HAMZA */\n\t\t[ 0x0627, 0xFE8D, null  , null  , 0xFE8E ], /* ALEF */\n\t\t[ 0x0628, 0xFE8F, 0xFE91, 0xFE92, 0xFE90 ], /* BEH */\n\t\t[ 0x0629, 0xFE93, null  , null  , 0xFE94 ], /* TEH_MARBUTA */\n\t\t[ 0x062A, 0xFE95, 0xFE97, 0xFE98, 0xFE96 ], /* TEH */\n\t\t[ 0x062B, 0xFE99, 0xFE9B, 0xFE9C, 0xFE9A ], /* THEH */\n\t\t[ 0x062C, 0xFE9D, 0xFE9F, 0xFEA0, 0xFE9E ], /* JEEM */\n\t\t[ 0x062D, 0xFEA1, 0xFEA3, 0xFEA4, 0xFEA2 ], /* HAH */\n\t\t[ 0x062E, 0xFEA5, 0xFEA7, 0xFEA8, 0xFEA6 ], /* KHAH */\n\t\t[ 0x062F, 0xFEA9, null  , null  , 0xFEAA ], /* DAL */\n\t\t[ 0x0630, 0xFEAB, null  , null  , 0xFEAC ], /* THAL */\n\t\t[ 0x0631, 0xFEAD, null  , null  , 0xFEAE ], /* REH */\n\t\t[ 0x0632, 0xFEAF, null  , null  , 0xFEB0 ], /* ZAIN */\n\t\t[ 0x0698, 0xFB8A, null  , null  , 0xFB8B ], /* ZHEH */\n\t\t[ 0x0633, 0xFEB1, 0xFEB3, 0xFEB4, 0xFEB2 ], /* SEEN */\n\t\t[ 0x0634, 0xFEB5, 0xFEB7, 0xFEB8, 0xFEB6 ], /* SHEEN */\n\t\t[ 0x0635, 0xFEB9, 0xFEBB, 0xFEBC, 0xFEBA ], /* SAD */\n\t\t[ 0x0636, 0xFEBD, 0xFEBF, 0xFEC0, 0xFEBE ], /* DAD */\n\t\t[ 0x0637, 0xFEC1, 0xFEC3, 0xFEC4, 0xFEC2 ], /* TAH */\n\t\t[ 0x0638, 0xFEC5, 0xFEC7, 0xFEC8, 0xFEC6 ], /* ZAH */\n\t\t[ 0x0639, 0xFEC9, 0xFECB, 0xFECC, 0xFECA ], /* AIN */\n\t\t[ 0x063A, 0xFECD, 0xFECF, 0xFED0, 0xFECE ], /* GHAIN */\n\t\t[ 0x0640, 0x0640, 0x0640, 0x0640, 0x0640 ], /* TATWEEL */\n\t\t[ 0x0641, 0xFED1, 0xFED3, 0xFED4, 0xFED2 ], /* FEH */\n\t\t[ 0x0642, 0xFED5, 0xFED7, 0xFED8, 0xFED6 ], /* QAF */\n\t\t[ 0x0643, 0xFED9, 0xFEDB, 0xFEDC, 0xFEDA ], /* KAF */\n\t\t[ 0x0644, 0xFEDD, 0xFEDF, 0xFEE0, 0xFEDE ], /* LAM */\n\t\t[ 0x0645, 0xFEE1, 0xFEE3, 0xFEE4, 0xFEE2 ], /* MEEM */\n\t\t[ 0x0646, 0xFEE5, 0xFEE7, 0xFEE8, 0xFEE6 ], /* NOON */\n\t\t[ 0x0647, 0xFEE9, 0xFEEB, 0xFEEC, 0xFEEA ], /* HEH */\n\t\t[ 0x0648, 0xFEED, null  , null  , 0xFEEE ], /* WAW */\n\t\t/* (arabic edit):\n\t\t \t-added missing forms in Alef_MAKSURA\n\t\t*/\n\t\t[ 0x0649, 0xFEEF, 0xFBE8, 0xFBE9, 0xFBFD ], /* ALEF_MAKSURA */\n\t\t[ 0x064A, 0xFEF1, 0xFEF3, 0xFEF4, 0xFEF2 ], /* YEH Arabic */\n\n\t\t/* (arabic edit):\n\t\t\t-there's a bug/oversight in JavaScript where the fianl form of Alef_MAKSURA should be 1640 instead it is 1709\n\t\t\tthe same as YEH Farsi. so I changed the YEH Farsi final form value from 0xFBFD to 0xFEF0\n\t\t\tto point to the final form of ALEF_MAKSURA in the Arabic font.\n\t\t*/\n\t\t[ 0x06CC, 0xFBFC, 0xFBFE, 0xFBFF, 0xFEF0 ], /* YEH Farsi */\n\t\t[ 0x0686, 0xFB7A, 0xFB7C, 0xFB7D, 0xFB7B ], /* CHEH */\n\t\t[ 0x067E, 0xFB56, 0xFB58, 0xFB59, 0xFB57 ],\n\t\t[ 0x06AF, 0xFB92, 0xFB94, 0xFB95, 0xFB93 ],\n\t\t[ 0x06A9, 0xFB8E, 0xFB90, 0xFB91, 0xFB8F ],\n\n\t],\n\tcombCharsMap = [\n\t\t// alex_clay: lam_alem forms found in Arabic.\n\t\t[ [ 0x0644, 0x0622 ], 0xFEF5, null, null, 0xFEF6 ], /* LAM_ALEF_MADDA */\n\t\t[ [ 0x0644, 0x0623 ], 0xFEF7, null, null, 0xFEF8 ], /* LAM_ALEF_HAMZA_ABOVE */\n\t\t[ [ 0x0644, 0x0625 ], 0xFEF9, null, null, 0xFEFA ], /* LAM_ALEF_HAMZA_BELOW */\n\t\t[ [ 0x0644, 0x0627 ], 0xFEFB, null, null, 0xFEFC ], /* LAM_ALEF */\n\t],\n\ttransChars = [\n\t\t0x0610, /* ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM */\n\t\t0x0612, /* ARABIC SIGN ALAYHE ASSALLAM */\n\t\t0x0613, /* ARABIC SIGN RADI ALLAHOU ANHU */\n\t\t0x0614, /* ARABIC SIGN TAKHALLUS */\n\t\t0x0615, /* ARABIC SMALL HIGH TAH */\n\t\t0x064B, /* ARABIC FATHATAN */\n\t\t0x064C, /* ARABIC DAMMATAN */\n\t\t0x064D, /* ARABIC KASRATAN */\n\t\t0x064E, /* ARABIC FATHA */\n\t\t0x064F, /* ARABIC DAMMA */\n\t\t0x0650, /* ARABIC KASRA */\n\t\t0x0651, /* ARABIC SHADDA */\n\t\t0x0652, /* ARABIC SUKUN */\n\t\t0x0653, /* ARABIC MADDAH ABOVE */\n\t\t0x0654, /* ARABIC HAMZA ABOVE */\n\t\t0x0655, /* ARABIC HAMZA BELOW */\n\t\t0x0656, /* ARABIC SUBSCRIPT ALEF */\n\t\t0x0657, /* ARABIC INVERTED DAMMA */\n\t\t0x0658, /* ARABIC MARK NOON GHUNNA */\n\t\t0x0670, /* ARABIC LETTER SUPERSCRIPT ALEF */\n\t\t0x06D6, /* ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA */\n\t\t0x06D7, /* ARABIC SMALL HIGH LIGATURE QAF WITH LAM WITH ALEF MAKSURA */\n\t\t0x06D8, /* ARABIC SMALL HIGH MEEM INITIAL FORM */\n\t\t0x06D9, /* ARABIC SMALL HIGH LAM ALEF */\n\t\t0x06DA, /* ARABIC SMALL HIGH JEEM */\n\t\t0x06DB, /* ARABIC SMALL HIGH THREE DOTS */\n\t\t0x06DC, /* ARABIC SMALL HIGH SEEN */\n\t\t0x06DF, /* ARABIC SMALL HIGH ROUNDED ZERO */\n\t\t0x06E0, /* ARABIC SMALL HIGH UPRIGHT RECTANGULAR ZERO */\n\t\t0x06E1, /* ARABIC SMALL HIGH DOTLESS HEAD OF KHAH */\n\t\t0x06E2, /* ARABIC SMALL HIGH MEEM ISOLATED FORM */\n\t\t0x06E3, /* ARABIC SMALL LOW SEEN */\n\t\t0x06E4, /* ARABIC SMALL HIGH MADDA */\n\t\t0x06E7, /* ARABIC SMALL HIGH YEH */\n\t\t0x06E8, /* ARABIC SMALL HIGH NOON */\n\t\t0x06EA, /* ARABIC EMPTY CENTRE LOW STOP */\n\t\t0x06EB, /* ARABIC EMPTY CENTRE HIGH STOP */\n\t\t0x06EC, /* ARABIC ROUNDED HIGH STOP WITH FILLED CENTRE */\n\t\t0x06ED, /* ARABIC SMALL LOW MEEM */\n\t];\n\nfunction CharacterMapContains(c) {\n\tfor (var i = 0 ; i < charsMap.length ; ++i)\n\t\tif (charsMap[ i ][0] == c) return true;\n\treturn false;\n}\n\nfunction GetCharRep(c) {\n\tfor (var i = 0 ; i < charsMap.length ; ++i)\n\t\tif (charsMap[ i ][0] == c) return charsMap[i];\n\treturn false;\n}\n\nfunction GetCombCharRep(c1, c2) {\n\tfor (var i = 0 ; i < combCharsMap.length ; ++i)\n\t\tif (combCharsMap[i][0][0] == c1 && combCharsMap[i][0][1] == c2) return combCharsMap[i];\n\treturn false;\n}\n\nfunction IsTransparent(c) {\n\tfor (var i = 0 ; i < transChars.length ; ++i)\n\t\tif ( transChars[i] == c ) return true;\n\treturn false;\n}\n\nfunction convertArabic(normal) {\n\tvar crep,\n\t\tcombcrep,\n\t\tshaped = \"\";\n\t\t\n\tfor ( var i = 0 ; i < normal.length ; ++i ) {\n\t\tvar current = normal.charCodeAt(i);\n\t\tif ( CharacterMapContains( current ) ) {\n\t\t\tvar prev = null,\n\t\t\t\tnext = null,\n\t\t\t\tprevID = i - 1,\n\t\t\t\tnextID = i + 1;\n\t\t\t\n\t\t\t/*\n\t\t\t\tTransparent characters have no effect in the shaping process.\n\t\t\t\tSo, ignore all the transparent characters that are BEFORE the\n\t\t\t\tcurrent character.\n\t\t\t\t*/\n\t\t\tfor ( ; prevID >= 0 ; --prevID ) {\n\t\t\t\tif ( !IsTransparent( normal.charCodeAt(prevID) ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprev = ( prevID >= 0 ) ? normal.charCodeAt(prevID) : null;\n\t\t\tcrep = prev ? GetCharRep( prev ) : false;\n\t\t\tif( crep[2] == null && crep[3] == null ) {\n\t\t\t\tprev = null;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t\tTransparent characters have no effect in the shaping process.\n\t\t\t\tSo, ignore all the transparent characters that are AFTER the\n\t\t\t\tcurrent character.\n\t\t\t\t*/\n\t\t\tfor ( ; nextID < normal.length ; ++nextID ) {\n\t\t\t\tif ( !IsTransparent( normal.charCodeAt(nextID) ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnext = ( nextID <= normal.length ) ? normal.charCodeAt(nextID) : null;\n\t\t\tcrep = next ? GetCharRep( next ) : false;\n\t\t\tif( crep[3] == null && crep[4] == null ) {\n\t\t\t\tnext = null;\n\t\t\t}\n\n\t\t\t// /* Combinations */\n\t\t\tif ( current == 0x0644 && next != null &&\n\t\t\t\t( next == 0x0622 || next == 0x0623 || next == 0x0625 || next == 0x0627) ) {\n\t\t\t\t\n\t\t\t\tcombcrep = GetCombCharRep(current, next);\n\t\t\t\tif ( prev != null ) {\n\t\t\t\t\tshaped += String.fromCharCode(combcrep[4]);\n\t\t\t\t} else {\n\t\t\t\t\tshaped += String.fromCharCode(combcrep[1]);\n\t\t\t\t}\n\t\t\t\t\ti = i+1;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tcrep = GetCharRep( current );\n\n\t\t\t/* Medial */\n\t\t\tif ( prev != null && next != null && crep[3] != null ) {\n\t\t\t\tshaped += String.fromCharCode(crep[3]);\n\t\t\t\tcontinue;\n\t\t\t} else /* Final */ \n\t\t\t\tif ( prev != null && crep[4] != null ) {\n\t\t\t\tshaped += String.fromCharCode(crep[4]);\n\t\t\t\tcontinue;\n\t\t\t} else /* Initial */\n\t\t\t\tif ( next != null && crep[2] != null ) {\n\t\t\t\tshaped += String.fromCharCode(crep[2]);\n\t\t\t\tcontinue;\n\t\t\t} else /* Isolated */ {\n\t\t\t\tshaped += String.fromCharCode(crep[1]);\n\t\t\t}\n\t\t} else {\n\t\t\tshaped += String.fromCharCode(current);\n\t\t}\n\t}\n\treturn shaped; \n}\nexports.convertArabic = convertArabic;\n\n// convert from Arabic Presentation Forms B\nfunction convertArabicBack(apfb) {\n\tvar toReturn = \"\",\n\t\tselectedChar;\n\t\n\ttheLoop:\n\tfor( var i = 0 ; i < apfb.length ; ++i ) {\n\t\tselectedChar = apfb.charCodeAt(i);\n\n\t\tfor( var j = 0 ; j < charsMap.length ; ++j ) {\n\t\t\tif( charsMap[j][4] == selectedChar || charsMap[j][2] == selectedChar || \n\t\t\t\tcharsMap[j][1] == selectedChar || charsMap[j][3] == selectedChar ) {\n\t\t\t\ttoReturn += String.fromCharCode(charsMap[j][0]);\n\t\t\t\tcontinue theLoop;\n\t\t\t}\n\t\t}\n\n\t\tfor( var j = 0 ; j < combCharsMap.length ; ++j ) {\n\t\t\tif( combCharsMap[j][4] == selectedChar || combCharsMap[j][2] == selectedChar || \n\t\t\t\tcombCharsMap[j][1] == selectedChar || combCharsMap[j][3] == selectedChar ) {\n\t\t\t\ttoReturn += String.fromCharCode(combCharsMap[j][0][0]) + String.fromCharCode(combCharsMap[j][0][1]);\n\t\t\t\tcontinue theLoop;\n\t\t\t}\n\t\t}\n\n\t\ttoReturn += String.fromCharCode( selectedChar );\n\t}\n\treturn toReturn;\n}\nexports.convertArabicBack = convertArabicBack;", "module.exports = {\n    PersianShaper: require(\"./PersianShaper\"),\n    ArabicShaper: require(\"./ArabicShaper\")\n}"],
  "mappings": "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",
  "names": []
}
